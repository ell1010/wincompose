<!--
   - WinCompose — a compose key for Windows — http://wincompose.info/
   -
   - Copyright © 2013—2021 Sam Hocevar <sam@hocevar.net>
   -             2014—2015 Benjamin Litzelmann
   -
   - This program is free software. It comes without any warranty, to
   - the extent permitted by applicable law. You can redistribute it
   - and/or modify it under the terms of the Do What the Fuck You Want
   - to Public License, Version 2, as published by the WTFPL Task Force.
   - See http://www.wtfpl.net/ for more details.
  -->

<wc:BaseWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wc="clr-namespace:WinCompose"
        xmlns:i18n="clr-namespace:WinCompose.i18n;assembly=language"
        xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d" x:Class="WinCompose.SettingsWindow"
        Title="{x:Static i18n:Text.Options}"
        Icon="/WinCompose;component/res/icon_settings.png"
        WindowStyle="ToolWindow"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen" 
               Style="{DynamicResource DefaultWindowStyle}" 
               VerticalContentAlignment="Stretch" 
               HorizontalContentAlignment="Stretch" 
               Width="430" Height="480" 
               SizeToContent="Height">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ui/Themes/Fluent/PresentationFramework.Fluent/Themes/Fluent.xaml"/>
                <ResourceDictionary Source="/ui/Themes/Fluent/PresentationFramework.Fluent/Themes/Fluent.Dark.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DrawingImage emoji:Image.Source="🎛" x:Key="ProgramBehaviorIcon"/>
            <DrawingImage emoji:Image.Source="🌐" x:Key="LanguageIcon"/>
            <DrawingImage emoji:Image.Source="🆎" x:Key="TestTypingIcon"/>
            <DrawingImage emoji:Image.Source="⚙️" x:Key="BehaviorIcon"/>
            <DrawingImage emoji:Image.Source="💬" x:Key="SequencesIcon"/>
            <DrawingImage emoji:Image.Source="❌" x:Key="InvalidSequencesIcon"/>
            <DrawingImage emoji:Image.Source="♿" x:Key="AccessibilityIcon"/>
            <DrawingImage emoji:Image.Source="🚀" x:Key="AdvancedIcon"/>

            <!-- display tooltips for 30 seconds; they’re supposed to be helpful -->
            <Style TargetType="TextBlock">
                <Setter Property="ToolTipService.ShowDuration" Value="30000"/>
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="ToolTipService.ShowDuration" Value="30000"/>
            </Style>

            <!-- wrap tooltips at 350 pixels width -->
            <Style TargetType="ToolTip">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding}" MaxWidth="350" TextWrapping="Wrap"/>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="OnCloseCommandExecuted"/>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="ApplicationCommands.Close"/>
    </Window.InputBindings>

    <StackPanel>


        <TabControl Margin="5" DockPanel.Dock="Top" Style="{DynamicResource TabStyle}">
            <!-- The Settings group -->
            <TabItem  Header="{x:Static i18n:Text.General}">
                <DockPanel Margin="8">
                    <!--<DockPanel Margin="8" Height="{Binding ElementName=MasterPanel, Path=ActualHeight}">-->
                    <GroupBox DockPanel.Dock="Top" Padding="0,4,0,0">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource ProgramBehaviorIcon}" Height="16" Margin="0 0 4 0"/>
                                <TextBlock x:Name="textBlock" Text="{x:Static i18n:Text.Behavior}" Style="{DynamicResource BaseTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>
                        </GroupBox.Header>
                        <Grid VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal"
                                    Margin="8,4" VerticalAlignment="Center"
                                    ToolTipService.ToolTip="{x:Static i18n:Text.LanguageToolTip}">
                                <Image Source="{StaticResource LanguageIcon}" Height="16" Margin="0 0 4 0"/>
                                <TextBlock Text="{x:Static i18n:Text.Language}" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>

                            <ComboBox Grid.Row="0" Grid.Column="1" Margin="8,4" VerticalAlignment="Center"
                                  ItemsSource="{x:Static wc:Settings.ValidLanguages}"
                                  SelectedValue="{Binding SelectedLanguage}"
                                  SelectedValuePath="Key" DisplayMemberPath="Value"/>

                            <CheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                  Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.AutoLaunch}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.AutoLaunchToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.AutoLaunch}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                                  Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.RunElevated}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.RunElevatedToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.RunElevated}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                                  Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.CheckUpdates}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.CheckUpdatesToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.CheckUpdates}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
                                  Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.KeepIconVisible}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.KeepIconVisibleToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.KeepIconVisible}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
                                  Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.DisableIcon}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.DisableIconToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.DisableIcon}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>
                        </Grid>
                    </GroupBox>

                    <GroupBox DockPanel.Dock="Top" Margin="0,4,0,0" Padding="0,4,0,0" MaxWidth="400">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource TestTypingIcon}" Height="16" Margin="0 0 4 0"/>
                                <TextBlock Text="{x:Static i18n:Text.TestTyping}" Style="{DynamicResource BaseTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>
                        </GroupBox.Header>
                        <emoji:RichTextBox Margin="8" Height="90" MaxHeight="90" Width="Auto"
                                       FontSize="20" AcceptsReturn="True"
                                       FontWeight="SemiBold" FontFamily="{x:Static wc:Constants.PreferredFontFamily}"
                                       Foreground="#545" Background="#fff" ForceCursor="True" Style="{DynamicResource DefaultRichTextBoxStyle}">
                            <FlowDocument>
                                <Paragraph>ÅḄ₡Đ🐹🏠♥…&#13;&#13;</Paragraph>
                            </FlowDocument>
                        </emoji:RichTextBox>
                    </GroupBox>

                </DockPanel>
            </TabItem>

            <!-- The Composing tab -->
            <TabItem Header="{x:Static i18n:Text.Composing}" >
                <DockPanel Margin="2" Name="MasterPanel">

                    <GroupBox DockPanel.Dock="Top" Padding="0,4,0,0">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource BehaviorIcon}" Height="16" Margin="0 0 4 0"/>
                                <TextBlock Text="{x:Static i18n:Text.Behavior}" Style="{DynamicResource BaseTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>
                        </GroupBox.Header>
                        <Grid VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Border Margin="0" ToolTipService.ToolTip="{x:Static i18n:Text.ComposeKeyToolTip}">
                                <emoji:TextBlock Grid.Row="0" Grid.Column="0"
                                             Text="{Binding StringFormat='⌨️ {0}', Source={x:Static i18n:Text.ComposeKey}, Path=.}"
                                             Margin="8,4" TextAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </Border>
                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="8,4" VerticalAlignment="Center"
                                   DataContext="{Binding ComposeKey0}" Text="{Binding FriendlyName}" FontWeight="Bold" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            <Button Grid.Row="0" Grid.Column="2" Margin="8,4" VerticalAlignment="Center"
                                Content="{x:Static i18n:Text.ChangeComposeKey}"
                                Command="{Binding EditButtonCommand}" CommandParameter="0" />

                            <TextBlock Grid.Row="1" Grid.Column="1" Margin="8,4" VerticalAlignment="Center"
                                   DataContext="{Binding ComposeKey1}" Text="{Binding FriendlyName}" FontWeight="Bold" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            <Button Grid.Row="1" Grid.Column="2" Margin="8,4" VerticalAlignment="Center"
                                Content="{x:Static i18n:Text.ChangeComposeKey}"
                                Command="{Binding EditButtonCommand}" CommandParameter="1"/>

                            <StackPanel Margin="0,8" Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
                                <Border Margin="0" ToolTipService.ToolTip="{x:Static i18n:Text.TimeoutToolTip}">
                                    <emoji:TextBlock Text="{Binding StringFormat='⏳ {0}', Source={x:Static i18n:Text.ResetTimeout}, Path=.}"
                                                 Margin="8,4" VerticalAlignment="Center" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                                </Border>
                                <Slider Width="150" Value="{Binding DelayTicks}" VerticalAlignment="Center"
                                    Minimum="0" Maximum="12" TickFrequency="1" IsSnapToTickEnabled="True"/>
                                <TextBlock Margin="6,4" Text="{Binding DelayText}" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>

                            <StackPanel Margin="4,8" Orientation="Horizontal" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3">
                                <Border Margin="0" ToolTipService.ToolTip="{x:Static i18n:Text.KeyboardLedToolTip}">
                                    <emoji:TextBlock Text="{Binding StringFormat='💡 {0}', Source={x:Static i18n:Text.KeyboardLed}, Path=.}"
                                                 Margin="8,0" VerticalAlignment="Center" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                                </Border>
                                <ComboBox Grid.Row="0" Grid.Column="1" Margin="8,0" VerticalAlignment="Center"
                                      ItemsSource="{x:Static wc:Settings.ValidLedKeys}"
                                      SelectedValue="{Binding SelectedLedKey}"
                                      DisplayMemberPath="FriendlyName" Style="{DynamicResource DefaultComboBoxStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>

                            <CheckBox Grid.Row="4" Grid.ColumnSpan="3" Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.KeepOriginalKey}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.KeepOriginalKeyToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.KeepOriginalKey}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Grid.Row="5" Grid.ColumnSpan="3" Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.AlwaysCompose}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.AlwaysComposeToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.AlwaysCompose}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Grid.Row="6" Grid.ColumnSpan="3" Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.UnicodeInput}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.UnicodeInputToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.UnicodeInput}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>
                        </Grid>
                    </GroupBox>

                    <GroupBox DockPanel.Dock="Top" Margin="0,4,0,0" Padding="0,4,0,0">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource SequencesIcon}" Height="16" Margin="0 0 4 0"/>
                                <TextBlock Text="{x:Static i18n:Text.Sequences}" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical">
                            <CheckBox Grid.Row="4" Grid.ColumnSpan="2" Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.UseXorgRules}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.UseXorgRulesToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.UseXorgRules}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Grid.Row="5" Grid.ColumnSpan="2" Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.UseXComposeRules}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.UseXComposeRulesToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.UseXComposeRules}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Grid.Row="6" Grid.ColumnSpan="2" Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.UseEmojiRules}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.UseEmojiRulesToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.UseEmojiRules}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>
                        </StackPanel>
                    </GroupBox>
                </DockPanel>
            </TabItem>

            <!-- The Tweaks tab -->
            <TabItem Header="{x:Static i18n:Text.Tweaks}">
                <DockPanel Margin="8">

                    <!-- The Invalid Sequences group -->
                    <GroupBox DockPanel.Dock="Top" Padding="0,4,0,0">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource InvalidSequencesIcon}" Height="16" Margin="0 0 4 0"/>
                                <TextBlock Text="{x:Static i18n:Text.InvalidSequences}" Style="{DynamicResource BaseTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>
                        </GroupBox.Header>
                        <StackPanel VerticalAlignment="Center">

                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.CaseInsensitive}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.CaseInsensitiveToolTip}">
                                <emoji:TextBlock Text="{Binding StringFormat='{}{0} 🔡', Source={x:Static i18n:Text.CaseInsensitive}, Path=.}"
                                             TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.SwapOnInvalid}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.SwapOnInvalidToolTip}">
                                <emoji:TextBlock Text="{Binding StringFormat='{}{0} ↔️', Source={x:Static i18n:Text.SwapOnInvalid}, Path=.}"
                                             TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.DiscardOnInvalid}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.DiscardOnInvalidToolTip}">
                                <emoji:TextBlock Text="{Binding StringFormat='{}{0} 🚫', Source={x:Static i18n:Text.DiscardOnInvalid}, Path=.}"
                                             TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Source={x:Static wc:Settings.BeepOnInvalid}}"
                                  ToolTipService.ToolTip="{x:Static i18n:Text.BeepOnInvalidToolTip}">
                                <emoji:TextBlock Text="{Binding StringFormat='{}{0} 🎵', Source={x:Static i18n:Text.BeepOnInvalid}, Path=.}"
                                             TextWrapping="Wrap" MaxWidth="330" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                        </StackPanel>
                    </GroupBox>

                    <GroupBox DockPanel.Dock="Top" Margin="0,4,0,0" Padding="0,4,0,0">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource AccessibilityIcon}" Height="16" Margin="0 0 4 0"/>
                                <TextBlock Text="{x:Static i18n:Text.Accessibility}" Style="{DynamicResource BaseTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>
                        </GroupBox.Header>
                        <StackPanel>
                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.CapsLockCapitalizes}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.CapsLockCapitalizesToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.CapsLockCapitalizes}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.EmulateCapsLock}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.EmulateCapsLockToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.EmulateCapsLock}" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.MustHoldCapsLock}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.MustHoldCapsLockToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.MustHoldCapsLock}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.ShiftDisablesCapsLock}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.ShiftDisablesCapsLockToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.ShiftDisablesCapsLock}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>
                        </StackPanel>
                    </GroupBox>

                    <!-- The Advanced group -->
                    <GroupBox DockPanel.Dock="Top" Margin="0,4,0,0" Padding="0,4,0,0">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource AdvancedIcon}" Height="16" Margin="0 0 4 0"/>
                                <TextBlock Text="{x:Static i18n:Text.Advanced}" Style="{DynamicResource BaseTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>
                        </GroupBox.Header>
                        <StackPanel>
                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.InsertZwsp}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.InsertZwspToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.InsertZwsp}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <CheckBox Margin="8,4" VerticalAlignment="Center"
                                IsChecked="{Binding Value, Source={x:Static wc:Settings.AllowInjected}}"
                                ToolTipService.ToolTip="{x:Static i18n:Text.AllowInjectedToolTip}">
                                <TextBlock Text="{x:Static i18n:Text.AllowInjected}" TextWrapping="Wrap" Style="{DynamicResource CaptionTextBlockStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </CheckBox>

                            <StackPanel VerticalAlignment="Center">
                                <TextBlock Text="{x:Static i18n:Text.IgnoreRegex}"
                                       ToolTipService.ToolTip="{x:Static i18n:Text.IgnoreRegexToolTip}"
                                       TextWrapping="Wrap" Margin="8,4,8,0"/>
                                <TextBox Margin="8,4" VerticalAlignment="Center" TextWrapping="WrapWithOverflow"
                                     FontFamily="{x:Static wc:Constants.FixedFontFamily}" Padding="4"
                                     Text="{Binding Value, Source={x:Static wc:Settings.IgnoreRegex}}" Style="{DynamicResource DefaultTextBoxBaseStyle}" Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </DockPanel>
            </TabItem>
        </TabControl>


        <!-- The Close button and the restart warning message -->
        <TextBlock  Foreground="Red" Text="{x:Static i18n:Text.NeedRestart}" HorizontalAlignment="Left"
                 Margin="10, 0, 0, 4" Visibility="{Binding WarnMessageVisibility}" TextWrapping="Wrap" MinHeight="40" Style="{DynamicResource BodyStrongTextBlockStyle}"/>
        <Button DockPanel.Dock="Bottom" HorizontalAlignment="Right" VerticalAlignment="Bottom" MinWidth="80" Height="30"
              Margin="10,0,10,10" Content="{Binding CloseButtonText}" Command="{Binding CloseButtonCommand}" 
              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{DynamicResource DefaultButtonStyle}" />
    </StackPanel>

</wc:BaseWindow>
